{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Test_Exercise\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ip, setIp] = useState('172.31.88.161');\n  const [timePeriod, setTimePeriod] = useState('1440'); // 1 day = 1440 minutes\n  const [interval, setInterval] = useState('300'); // every 5 minutes\n  const [cpuData, setCpuData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.get('http://localhost:5000/cpu-usage', {\n        params: {\n          ip: '172.31.88.161',\n          timePeriod: 40000,\n          interval\n        }\n      });\n      setCpuData(res.data);\n    } catch (err) {\n      setError('Failed to fetch CPU data: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const chartData = cpuData && {\n    labels: cpuData.timestamps.map(ts => new Date(ts).toLocaleTimeString()),\n    datasets: [{\n      label: 'Metric Data',\n      data: cpuData.usageData,\n      fill: true,\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Aws Instance CPU usage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time period (min):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: timePeriod,\n          onChange: e => setTimePeriod(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '1rem'\n        },\n        children: [\"Period (sec):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: interval,\n          onChange: e => setInterval(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '1rem'\n        },\n        children: [\"IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ip,\n          onChange: e => setIp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), cpuData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7iyTdJVU0MB85gfkTsfYg3nYP4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Line","Chart","ChartJS","jsxDEV","_jsxDEV","App","_s","ip","setIp","timePeriod","setTimePeriod","interval","setInterval","cpuData","setCpuData","loading","setLoading","error","setError","handleSubmit","e","preventDefault","res","get","params","data","err","message","chartData","labels","timestamps","map","ts","Date","toLocaleTimeString","datasets","label","usageData","fill","backgroundColor","borderColor","tension","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","value","onChange","target","required","marginLeft","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Test_Exercise/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\n\nfunction App() {\n  const [ip, setIp] = useState('172.31.88.161');\n  const [timePeriod, setTimePeriod] = useState('1440'); // 1 day = 1440 minutes\n  const [interval, setInterval] = useState('300'); // every 5 minutes\n  const [cpuData, setCpuData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.get('http://localhost:5000/cpu-usage', {\n        params: {\n          ip:'172.31.88.161',\n          timePeriod: 40000,\n          interval\n        }\n      });\n      setCpuData(res.data);\n    } catch (err) {\n      setError('Failed to fetch CPU data: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const chartData = cpuData && {\n    labels: cpuData.timestamps.map(ts => new Date(ts).toLocaleTimeString()),\n    datasets: [\n      {\n        label: 'Metric Data',\n        data: cpuData.usageData,\n        fill: true,\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        tension: 0.4,\n      }\n    ]\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'Arial' }}>\n      <h2>Aws Instance CPU usage</h2>\n      <form onSubmit={handleSubmit} style={{ marginBottom: '1rem' }}>\n        <label>\n          Time period (min):\n          <input\n            type=\"number\"\n            value={timePeriod}\n            onChange={(e) => setTimePeriod(e.target.value)}\n            required\n          />\n        </label>\n        <label style={{ marginLeft: '1rem' }}>\n          Period (sec):\n          <input\n            type=\"number\"\n            value={interval}\n            onChange={(e) => setInterval(e.target.value)}\n            required\n          />\n        </label>\n        <label style={{ marginLeft: '1rem' }}>\n          IP Address:\n          <input\n            type=\"text\"\n            value={ip}\n            onChange={(e) => setIp(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\" style={{ marginLeft: '1rem' }}>Load</button>\n      </form>\n\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {cpuData && (\n        <div>\n          <Line data={chartData} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}